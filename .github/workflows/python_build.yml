name: python-build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: ./python

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          $HOME/.cargo/bin/rustup default stable
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install metadata guardian
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          make develop

      - name: Check Python
        run: |
          source venv/bin/activate
          make check-python

      - name: Check Rust
        run: make check-rust

  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          $HOME/.cargo/bin/rustup default stable
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Enable manylinux Python targets
        run: echo "/opt/python/cp38-cp38m/bin" >> $GITHUB_PATH

      - name: Install metadata guardian
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          make develop

      - name: Run unit tests
        run: |
          source venv/bin/activate
          make unit-test

      - name: Build Sphinx documentation
        run: |
          source venv/bin/activate
          make build-documentation

  multi-python-running:
    name: Running with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build and install metadata guardian
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          make setup
          maturin develop

      - name: Run metadata guardian
        run: |
          source venv/bin/activate
          python -c 'import metadata_guardian'