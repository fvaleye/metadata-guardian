[build-system]
requires = ["maturin==0.11.4"]
build-backend = "maturin"

[project]
name = "metadata_guardian"
author = "Florian Valeye"
author_email="florian.valeye@gmail.com"
description = "MetadataGuardian is used to protect data by searching the source metadata."
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.6"
keywords = ["pii", "inclusion", "biais", "metadata_dataguardian", "metadata", "guardian"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only"
]
dependencies = [
    "rich",
    "loguru",
    'dataclasses;python_version<="3.6"',
]

[project.optional-dependencies]
all = ["avro", "snowflake-connector-python", "fastparquet", "boto3", "deltalake"]
snowflake = [ "snowflake-connector-python" ]
avro = [ "avro" ]
parquet = [ "fastparquet" ]
aws = [ "boto3" ]
deltalake = [ "deltalake" ]
devel = [
    "mypy",
    "black",
    "isort",
    "pytest",
    "pytest-mock",
    "pytest-cov",
    "pytest-clarity",
    "sphinx",
    "pydata-sphinx-theme",
    "toml"
]

#[project.urls]
#documentation = ""
#repository = ""

[tool.mypy]
files = "metadata_guardian/*.py"
exclude = "^tests"
mypy_path = "./stubs"
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = false
implicit_reexport = false
strict_equality = true

[tool.isort]
profile = "black"
src_paths = ["metadata_guardian", "tests"]

[tool.black]
include = '\.pyi?$'
exclude = "venv"